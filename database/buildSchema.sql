-- MySQL Script generated by MySQL Workbench
-- Mon Nov  1 00:29:19 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema romanos-system
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `romanos-system` ;

-- -----------------------------------------------------
-- Schema romanos-system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `romanos-system` DEFAULT CHARACTER SET utf8 ;
USE `romanos-system` ;

-- -----------------------------------------------------
-- Table `products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products` ;

CREATE TABLE IF NOT EXISTS `products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(32) NULL,
  `name` VARCHAR(50) NOT NULL,
  `description` VARCHAR(255) NULL,
  `price` DOUBLE NULL,
  `multiple_ingredients` TINYINT(1) NOT NULL COMMENT 'Indica si el producto puede tener tener varios ingredientes a la vez.',
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingredients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingredients` ;

CREATE TABLE IF NOT EXISTS `ingredients` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `price` DOUBLE NULL,
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `product_id`),
  INDEX `fk_ingredient_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_ingredient_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sizes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sizes` ;

CREATE TABLE IF NOT EXISTS `sizes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `price` DOUBLE NULL,
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `product_id`),
  INDEX `fk_sizes_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_sizes_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `roles` ;

CREATE TABLE IF NOT EXISTS `roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NULL,
  `id_card` VARCHAR(45) NOT NULL,
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`, `role_id`),
  INDEX `fk_user_role1_idx` (`role_id` ASC),
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `clients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clients` ;

CREATE TABLE IF NOT EXISTS `clients` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `id_card` VARCHAR(45) NOT NULL,
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sales` ;

CREATE TABLE IF NOT EXISTS `sales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `iva_rate` DOUBLE NOT NULL COMMENT 'Porcentaje de IVA',
  `paid` TINYINT NOT NULL DEFAULT 0 COMMENT 'Se encuentra pagada la venta',
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `orders` ;

CREATE TABLE IF NOT EXISTS `orders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `quantity` INT NOT NULL COMMENT 'Cantidad de orden',
  `updated_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  `product_id` INT NOT NULL,
  `sale_id` INT NOT NULL,
  `size_id` INT NULL,
  PRIMARY KEY (`id`, `product_id`, `sale_id`),
  INDEX `fk_order_product1_idx` (`product_id` ASC),
  INDEX `fk_orders_sales1_idx` (`sale_id` ASC),
  INDEX `fk_orders_sizes1_idx` (`size_id` ASC),
  CONSTRAINT `fk_order_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_sales1`
    FOREIGN KEY (`sale_id`)
    REFERENCES `sales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_sizes1`
    FOREIGN KEY (`size_id`)
    REFERENCES `sizes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingredient_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingredient_order` ;

CREATE TABLE IF NOT EXISTS `ingredient_order` (
  `ingredient_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`ingredient_id`, `order_id`),
  INDEX `fk_ingredient_has_order_order1_idx` (`order_id` ASC),
  INDEX `fk_ingredient_has_order_ingredient1_idx` (`ingredient_id` ASC),
  CONSTRAINT `fk_ingredient_has_order_ingredient1`
    FOREIGN KEY (`ingredient_id`)
    REFERENCES `ingredients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ingredient_has_order_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
